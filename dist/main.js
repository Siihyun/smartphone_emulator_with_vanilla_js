(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var s=t.g.document;if(!e&&s&&(s.currentScript&&(e=s.currentScript.src),!e)){var a=s.getElementsByTagName("script");a.length&&(e=a[a.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();const e=()=>{const t=new Date;return("0"+t.getHours()).slice(-2)+":"+("0"+t.getMinutes()).slice(-2)};t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p,t.p;(()=>{const t=document.querySelector(".time-bar");setInterval((()=>{t.textContent=(()=>{const t=new Date;return t.getFullYear()+"/"+("0"+(1+t.getMonth())).slice(-2)+"/"+("0"+t.getDate()).slice(-2)})()+" "+e()}),1e3)})(),new class{constructor(){this.rootNode=document.querySelector("#root"),this.state={mode:"HOME"},this.home=new class{constructor(t,e){this.setState=e,this.target=t}handleClick=t=>{const e=t.target.dataset.key;this.setState(e)};render=()=>{this.target.innerHTML='<ul class="app-list">\n        <li class="app-item" data-key="MEMO_APP">Memo</li>\n        <li class="app-item" data-key="PHOTO_APP">Photo</li>\n        <li class="app-item" data-key="ALARM_APP">Alarm</li>\n      </ul>',document.querySelector(".app-list").addEventListener("click",this.handleClick)}}(this.rootNode,this.setState),this.alarmApp=new class{constructor(t,e){this.target=t,this.setState=e,this.alarmList=[],this.alarmIntervalList=[]}addZero=t=>t<10?"0"+t:t;getAlarmTime=()=>{const t=document.querySelector(".alarm-hours"),e=document.querySelector(".alarm-mins"),s=document.querySelector(".am-pm");let a=t.options[t.selectedIndex].value;const n=e.options[e.selectedIndex].value;return"PM"===s.options[s.selectedIndex].value&&(a=parseInt(a)+12),this.addZero(a)+":"+this.addZero(n)};setAlarm=t=>{const s=setInterval((()=>{t===e()&&(alert(e()),this.deleteAlarm(t))}),1e3);this.alarmIntervalList.push({time:t,interval:s})};deleteAlarm=t=>{this.alarmList=this.alarmList.filter((e=>e!==t));const e=this.alarmIntervalList.find((e=>e.time===t)).interval;clearTimeout(e),this.alarmIntervalList=this.alarmIntervalList.filter((e=>e.time!==t)),this.update()};update=()=>{document.querySelector(".alarm-list").innerHTML=this.alarmList.map((t=>`<li class="alarm-item">\n      <span class="alarm-item-time">${t}</span>\n      <button class="alarm-delete" data-time=${t}>삭제</button>\n    </li><hr>`)).join("")};render=()=>{this.target.innerHTML='<section class="alarm-wrapper">\n    <nav class="alarm-nav-bar">\n      <button class="alarm-back-button">back</button>\n      <button class="alarm-new-button">new</button>\n    </nav>\n    <div class="alarm-set-wrapper invisible">\n      <div class="alarm-time">\n        <select class="am-pm">\n          <option value="AM">AM</option>\n          <option value="PM">PM</option>\n        </select>\n        <select class="alarm-hours">\n          <option value="1">1</option>\n          <option value="2">2</option>\n          <option value="3">3</option>\n          <option value="4">4</option>\n          <option value="5">5</option>\n          <option value="6">6</option>\n          <option value="7">7</option>\n          <option value="8">8</option>\n          <option value="9">9</option>\n          <option value="10">10</option>\n          <option value="11">11</option>\n          <option value="12">12</option>\n        </select>\n\n        <select class="alarm-mins">\n          <option value="0">00</option>\n          <option value="10">10</option>\n          <option value="20">20</option>\n          <option value="30">30</option>\n          <option value="40">40</option>\n          <option value="50">50</option>\n        </select>\n      </div>\n      <button class="alarm-save">저장</button>\n    </div>\n    <ul class="alarm-list">\n    </ul>\n  </section>\n    ';const t=document.querySelector(".alarm-wrapper"),e=document.querySelector(".alarm-set-wrapper");t.addEventListener("click",(t=>{const s=t.target.classList;if(s.contains("alarm-save")){const t=this.getAlarmTime();this.alarmList.push(t),this.setAlarm(t),this.update(),e.classList.add("invisible")}else if(s.contains("alarm-new-button"))e.classList.remove("invisible");else if(s.contains("alarm-delete")){const e=t.target.dataset.time;this.deleteAlarm(e)}else s.contains("alarm-back-button")&&this.setState("HOME")}))}}(this.rootNode,this.setState),this.memoApp=new class{constructor(t,e){this.target=t,this.setState=e,this.memoList=[]}render=()=>{this.target.innerHTML='<section class="memo-wrapper">\n    <nav class="nav-bar">\n      <button class="back-button">back</button>\n      <button class="new-button">new</button>\n    </nav>\n    <input class="memo-input invisible" type="text" placeholder="메모를 입력하세요..">\n    <ul class="memo-list">\n    </ul>\n  </section>';const t=document.querySelector(".memo-wrapper"),e=(document.querySelector(".nav-bar"),document.querySelector(".memo-input"));t.addEventListener("click",(t=>{const s=t.target.classList;s.contains("back-button")?this.setState("HOME"):s.contains("new-button")?(e.classList.remove("invisible"),e.focus()):s.contains("memo-item")&&(document.querySelectorAll(".memo-item").forEach((t=>t.classList.remove("full-load"))),s.add("full-load"))})),t.addEventListener("keydown",(t=>{t.target.classList.contains("memo-input")&&13===t.keyCode&&(this.memoList.push(e.value),this.update(),e.classList.add("invisible"),e.value="")}))};update=()=>{document.querySelector(".memo-list").innerHTML=this.memoList.map((t=>`<li class="memo-item">${t}</li><hr>`)).join("")}}(this.rootNode,this.setState),this.photoApp=new class{constructor(t,e){this.target=t,this.setState=e,this.photoList=["file1","file2","file3","file4","file5","file6","file7","file8","file9","file10"],this.viewerImg=""}update=()=>{document.querySelector(".photo-list").innerHTML=this.photoList.map((t=>`<li class="photo-item"><img class="photo-image" data-id=${t} src="dist/${t}.png" alt="user photo"></li>`)).join("")};updateViewer=()=>{const t=document.querySelector(".photo-image-viewer");""!==this.viewerImg&&(t.innerHTML=`<img class="photo-image-item"  src="dist/${this.viewerImg}.png" alt="user photo">`)};render=()=>{this.target.innerHTML='<section class="photo-wrapper">\n    <nav class="photo-nav-bar">\n      <button class="photo-back-button">back</button>\n    </nav>\n    <ul class="photo-list">\n    </ul>\n    <div class="photo-image-viewer">\n        \n    </div>\n  </section>',document.querySelector(".photo-wrapper").addEventListener("click",(t=>{const e=t.target.classList;if(e.contains("photo-back-button"))this.setState("HOME");else if(e.contains("photo-image")){const s=t.target.dataset.id;document.querySelectorAll(".photo-image").forEach((t=>t.classList.remove("selected"))),e.add("selected"),this.viewerImg=s,this.updateViewer()}})),this.update()}}(this.rootNode,this.setState),this.setState(this.state.mode)}setState=t=>{this.state.mode=t,this.render(this.state.mode)};render=t=>{switch(t){case"HOME":this.home.render();break;case"MEMO_APP":this.memoApp.render();break;case"ALARM_APP":this.alarmApp.render();break;case"PHOTO_APP":this.photoApp.render();break;default:return}}}})();